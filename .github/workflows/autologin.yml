name: FreeDNS Auto Login (zc.php, 200 OK)

# 设置触发条件
on:
  # 允许手动运行
  workflow_dispatch:
  # 每月 1 号凌晨 03:00 UTC 自动运行一次
  schedule:
    - cron: '0 3 1 * *' 

jobs:
  auto_login:
    runs-on: ubuntu-latest
    
    # 步骤环境变量：从 GitHub Secrets 导入凭证
    env:
      USERNAME: ${{ secrets.AFRAID_USERNAME }}
      PASSWORD: ${{ secrets.AFRAID_PASSWORD }}
      
    steps:
      - name: 🔐 FreeDNS Login and Extend Account (zc.php)
        id: login
        run: |
          # --- 步骤 1: 定义常量 ---
          BASE_URL="https://freedns.afraid.org"
          LOGIN_URL="${BASE_URL}/zc.php"
          DORMANT_EXTEND_URL="${BASE_URL}/dormant/?action=extend"
          SUCCESS_INDICATOR="Last IP"
          
          # 存储会话 Cookie 的文件
          COOKIE_FILE=$(mktemp)
          
          echo "尝试登录到 ${LOGIN_URL}..."
          
          # --- 步骤 2: GET 登录页以获取初始会话 Cookie ---
          # -c 保存 Cookie 到 COOKIE_FILE
          curl -s -L -c "$COOKIE_FILE" "$LOGIN_URL" > /dev/null
          
          echo "已获取初始会话 Cookie。"
          
          # --- 步骤 3: POST 提交登录表单 ---
          # 登录数据：确保字段名与 freedns.afraid.org 的表单匹配
          LOGIN_DATA="username=${USERNAME}&password=${PASSWORD}&submit=Login"
          
          # -b 携带 Cookie；-c 保存新的 Cookie；-s 静默模式；-L 跟随重定向（保留以防万一）
          LOGIN_RESPONSE=$(curl -s -L -b "$COOKIE_FILE" -c "$COOKIE_FILE" -X POST \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -H "User-Agent: GitHubActionsBot" \
            -d "$LOGIN_DATA" \
            "$LOGIN_URL")
            
          # 验证登录成功：检查响应内容是否包含成功标志
          if echo "$LOGIN_RESPONSE" | grep -q "$SUCCESS_INDICATOR"; then
            echo "✅ 登录成功！页面内容包含: ${SUCCESS_INDICATOR}"
          else
            echo "::error:: 登录失败！未在响应内容中找到 '${SUCCESS_INDICATOR}'。"
            echo "请检查用户名/密码、表单字段名或登录 URL (${LOGIN_URL}) 是否正确。"
            exit 1
          fi

          echo "登录会话有效。尝试延长账户期限..."
          
          # --- 步骤 4: 访问延长账户页面 ---
          EXTEND_RESPONSE=$(curl -s -L -b "$COOKIE_FILE" \
            -H "User-Agent: GitHubActionsBot" \
            "$DORMANT_EXTEND_URL")
            
          # --- 步骤 5: 验证延长结果 ---
          if echo "$EXTEND_RESPONSE" | grep -q "Your account has been extended"; then
            echo "✅ 账户延长成功！"
          elif echo "$EXTEND_RESPONSE" | grep -q "You have no dormant domains"; then
            echo "✅ 账户目前没有休眠域名，任务完成。"
          else
            echo "⚠️ 延长操作失败或页面内容不明确。请手动检查账户。"
            # 不终止流程，因为登录已成功，但发出警告
          fi
